{"version":3,"sources":["component/ControlSession.jsx","component/Timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ControlSession","props","useState","value","length","setLength","handlerSelectorTime","setHandlerSelectorTime","handlerSelectionValues","updateValues","useEffect","reboot","setReboot","zero","startStop","setTimerLabel","timerLabel","className","id","idLabel","title","idDecrement","onClick","class","idLength","translate","idIncrement","Timer","match","Date","prototype","getFormatMinSecond","format","this","toLocaleTimeString","getHours","slice","setFormatMinSecond","min","seg","setMinutes","inizializeTimeLeft","difference","timeLeft","year","month","date","Math","floor","hours","minutes","seconds","ms","getDate","App","setDate","setTimeLeft","setStartStop","breakLength","setBreakLength","sessionLength","setSessionLength","audioBeep","document","getElementById","updateValue","isZero","play","timer","setTimeout","console","log","calculateTimeLeft","clearTimeout","getTimeLeft","pause","currentTime","preload","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.46dcd54e.chunk.js","sourcesContent":["import \"../style/ControlSession.scss\";\nimport React, { useState, useEffect } from \"react\";\nfunction ControlSession(props) {\n  const [length, setLength] = useState(props.value);\n  const [handlerSelectorTime, setHandlerSelectorTime] = useState(\n    props.handlerSelectorTime\n  );\n\n  function handlerArrowUp() {\n    if (length >= 60) return;\n    if (props.startStop == true) return;\n    handlerSelectionValues(length + 1);\n    setLength(length + 1);\n  }\n  function handlerArrowDown() {\n    if (length <= 1) return;\n    if (props.startStop == true) return;\n    handlerSelectionValues(length - 1);\n    setLength(length - 1);\n  }\n  /**\n   * funcion controla quien puede modificar los valores del timer cuando esta en pause\n   * @param valor por el cual va a ser actualizado el timer\n   */\n  function handlerSelectionValues(length) {\n    // si esta pausado el timer no se pueden modificar los valores\n    if (handlerSelectorTime) props.updateValues(length);\n  }\n  /**\n   * funcion que selecciona el valor siguiente a actualizar\n   */\n  function updatesValues() {\n    // si esta pausado el timer no se pueden modificar los valores y esta corriendo el reloj\n    if (props.startStop == false) return;\n    if (handlerSelectorTime) {\n      props.updateValues(length);\n      props.setTimerLabel(props.timerLabel);\n    }\n  }\n  /**\n   *  actualiza el valor en caso de actualizarse el temporizador\n   */\n  function updateReboot() {\n    if (props.reboot) {\n      setLength(props.value);\n      props.setReboot(false);\n      setHandlerSelectorTime(props.handlerSelectorTime);\n    }\n  }\n  useEffect(() => {\n    updateReboot();\n    if (props.zero) {\n      setHandlerSelectorTime(!handlerSelectorTime);\n      return;\n    }\n    updatesValues();\n\n    // if (zero && handlerSelectorTime) {\n    //   handlerSelectorTimer();\n    // }\n    // if (zero) {\n    //   setHandlerSelectorTime(!handlerSelectorTime);\n    //   setZero(false);\n    // }\n  }, [props.zero, props.reboot]);\n  // console.log(\n  //   `${props.idLabel}\\n`,\n  //   `props.zero = ${props.zero}\\n`,\n  //   `handlerSelectorTime ${handlerSelectorTime}\\n\\n`\n  // );\"\n  return (\n    <div className=\"container-sm px-0 \">\n      <div className=\"row row-cols-auto justify-content-center\">\n        <div className=\"col\">\n          <h5 className=\"\" id={props.idLabel}>\n            {props.title}\n          </h5>\n        </div>\n      </div>\n      <div className=\"row row-cols-auto justify-content-center\">\n        <div className=\"col\">\n          <button\n            id={props.idDecrement}\n            className=\"btn btn-info\"\n            onClick={handlerArrowDown}\n          >\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </button>\n        </div>\n        <div id={props.idLength} translate=\"no\" className=\"col\">\n          {length}\n        </div>\n        <div className=\"col\">\n          <button\n            id={props.idIncrement}\n            className=\"btn btn-info\"\n            onClick={handlerArrowUp}\n          >\n            <i class=\"bi bi-caret-up-fill\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ControlSession;\n","import \"../style/Timer.scss\";\n\nfunction Timer(props) {\n  return (\n    <div>\n      <h3 id=\"timer-label\">{props.timerLabel}</h3>\n      <div translate=\"no\" id=\"time-left\">\n        {props.value.match(/a/) ? \"00:00\" : props.value}\n      </div>\n    </div>\n  );\n}\nexport default Timer;\n","import ControlSession from \"./component/ControlSession.jsx\";\nimport Timer from \"./component/Timer.jsx\";\nimport \"./App.scss\";\nimport React, { useState, useEffect } from \"react\";\nDate.prototype.getFormatMinSecond = function () {\n  let format = this.toLocaleTimeString();\n  return this.getHours() == 1 ? \"60:00\" : format.slice(3);\n};\nDate.prototype.setFormatMinSecond = function (min, seg) {\n  this.setMinutes(min, seg);\n};\nconst inizializeTimeLeft = function (length) {\n  const difference = length * 60 * 1000;\n  let timeLeft = {};\n  if (difference > 0) {\n    timeLeft = {\n      year: 0,\n      month: 0,\n      date: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n      minutes: Math.floor((difference / 1000 / 60) % 60),\n      seconds: Math.floor((difference / 1000) % 60),\n      ms: 0,\n    };\n  }\n  return timeLeft;\n};\nconst getDate = function ({\n  hours: hours = 0,\n  minutes: minutes,\n  seconds: seg,\n  ms: ms,\n}) {\n  //402 ms tiempo de retrazo producido\n  // console.log(minutes, seg, ms);\n  const difference =\n    hours * 60 * 60 * 1000 + minutes * 60 * 1000 + seg * 1000 + ms + 402;\n  return new Date(+new Date() + difference);\n};\nfunction App() {\n  const [date, setDate] = useState(getDate({ minutes: 25, seconds: 0, ms: 0 }));\n  const [timeLeft, setTimeLeft] = useState(inizializeTimeLeft(25));\n  const [startStop, setStartStop] = useState(false);\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [reboot, setReboot] = useState(false);\n  const [timerLabel, setTimerLabel] = useState(\"Session\");\n  const audioBeep = document.getElementById(\"beep\");\n  const calculateTimeLeft = () => {\n    console.log(`date: ${date}`);\n    const difference = +date - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        year: 0,\n        month: 0,\n        date: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n        ms: 0,\n      };\n    }\n    return timeLeft;\n  };\n  function getTimeLeft({ year, month, date, hours, minutes, seconds, ms }) {\n    return new Date(\n      year,\n      month,\n      date,\n      hours,\n      minutes,\n      seconds,\n      ms\n    ).getFormatMinSecond();\n  }\n  function startStopOnClick() {\n    setStartStop(!startStop);\n    setDate(getDate(timeLeft));\n  }\n  useEffect(() => {\n    if (startStop) {\n      const timer = setTimeout(() => {\n        setTimeLeft(calculateTimeLeft());\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n    // , [timeLeft]\n  });\n  function buzzer(timer) {\n    if (timer == 0) {\n      audioBeep.play();\n    }\n  }\n  function rebootTimeLeft() {\n    setReboot(true);\n    setStartStop(false);\n    setDate(getDate({ minutes: 25, seconds: 0, ms: 0 }));\n    setTimeLeft(inizializeTimeLeft(25));\n    setBreakLength(5);\n    setSessionLength(25);\n    setTimerLabel(\"Session\");\n    if (audioBeep) {\n      audioBeep.pause();\n      audioBeep.currentTime = 0;\n    }\n  }\n  function updateValue(value) {\n    setDate(\n      value == 60\n        ? getDate({ hours: value, minutes: 0, seconds: 0, ms: 0 })\n        : getDate({ minutes: value, seconds: 0, ms: 0 })\n    );\n    setTimeLeft(inizializeTimeLeft(value));\n  }\n  function isZero() {\n    if (timeLeft.hours != 1 && timeLeft.minutes == 0 && timeLeft.seconds == 0) {\n      buzzer(0);\n      return true;\n    }\n    return false;\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"container-md\">\n        <header className=\"row mb-3\">\n          <h1 className=\"col-sm\">25 + 5 Clock</h1>\n        </header>\n        <div className=\"row row-cols-auto justify-content-center gy-4\">\n          <div className=\"col \">\n            <ControlSession\n              idLabel={\"break-label\"}\n              idDecrement={\"break-decrement\"}\n              idIncrement={\"break-increment\"}\n              idLength={\"break-length\"}\n              title={\"Break Length\"}\n              setTimerLabel={setTimerLabel}\n              timerLabel={\"break\"}\n              zero={isZero()}\n              handlerSelectorTime={false}\n              startStop={startStop}\n              reboot={reboot}\n              setReboot={setReboot}\n              updateValues={updateValue}\n              value={breakLength}\n              timeLeft={timeLeft}\n            />\n          </div>\n          <div className=\"col \">\n            <ControlSession\n              idLabel={\"session-label\"}\n              idDecrement={\"session-decrement\"}\n              idIncrement={\"session-increment\"}\n              idLength={\"session-length\"}\n              title={\"Session Length\"}\n              setTimerLabel={setTimerLabel}\n              timerLabel={\"Session\"}\n              zero={isZero()}\n              handlerSelectorTime={true}\n              startStop={startStop}\n              reboot={reboot}\n              setReboot={setReboot}\n              updateValues={updateValue}\n              value={sessionLength}\n              timeLeft={timeLeft}\n            />\n          </div>\n        </div>\n        <div className=\"row row-cols-auto mt-3 justify-content-center\">\n          <div className=\"col\">\n            <div className=\"border border-4 rounded mt-3 mb-3 p-5\">\n              <Timer timerLabel={timerLabel} value={getTimeLeft(timeLeft)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"row row-cols-auto mt-1 justify-content-center\">\n          <div className=\"col\">\n            <button\n              onClick={startStopOnClick}\n              className=\"btn btn-info\"\n              id=\"start_stop\"\n            >\n              <i class=\"bi bi-play-fill\"></i>\n              <i class=\"bi bi-pause-fill\"></i>\n            </button>\n          </div>\n          <div className=\"col\">\n            <button\n              onClick={rebootTimeLeft}\n              className=\"btn btn-info\"\n              id=\"reset\"\n            >\n              <i class=\"bi bi-arrow-repeat\"></i>\n            </button>\n          </div>\n        </div>\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}